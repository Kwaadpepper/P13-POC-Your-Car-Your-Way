name: Docker Images - Build & Push

on:
  workflow_call:
    inputs:
      tag:
        type: string
        required: true
        description: "Le tag Ã  utiliser pour l'image Docker (ex: 1.0.0, sha, etc.)"

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  REPO: p13-poc-your-car-your-way

permissions:
  contents: read
  packages: write

jobs:
  build-shared-cache:
    runs-on: ubuntu-latest
    concurrency:
      group: front-images-shared
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build shared (cache only)
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/docker/Dockerfile.front
          target: shared-builder
          push: false
          build-args: |
            PROJECT=shared
            CONFIG=production
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push:
    needs: [build-shared-cache]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # Frontend
          - name: shell
            type: frontend
            project: shell
          - name: app-backoffice
            type: frontend
            project: app-backoffice
          - name: app-reservation
            type: frontend
            project: app-reservation
          - name: app-support
            type: frontend
            project: app-support

          # Backend
          - name: config-server
            type: backend
            context: ./backend/platform/config-server
          - name: gateway
            type: backend
            context: ./backend/platform/gateway
          - name: service-registry
            type: backend
            context: ./backend/platform/service-registry
          - name: user-service
            type: backend
            context: ./backend/services/user-service
          - name: support-service
            type: backend
            context: ./backend/services/support-service

    concurrency:
      group: images-${{ matrix.name }}
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Compute image tag
        id: meta
        shell: bash
        run: |
          OWNER_SAFE=$(echo "${{ env.OWNER }}" | tr '[:upper:]' '[:lower:]')
          IMAGE_BASE=${{ env.REGISTRY }}/${OWNER_SAFE}/${{ env.REPO }}-${{ matrix.name }}
          echo "tags=${IMAGE_BASE}:${{ inputs.tag }}" >> "$GITHUB_OUTPUT"

      # Frontend build (cache only)
      - name: Build frontend (cache only)
        if: matrix.type == 'frontend'
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./docker/frontend/Dockerfile.front
          target: ng-runtime
          push: false
          build-args: |
            BUN_VERSION=1.2.19
            PROJECT=${{ matrix.project }}
            CONFIG=production
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Backend build (cache only)
      - name: Build backend (cache only)
        if: matrix.type == 'backend'
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ./docker/backend/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: true

      # Frontend push
      - name: Push frontend image (reuse cache)
        if: matrix.type == 'frontend'
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/docker/Dockerfile.front
          target: ng-runtime
          push: true
          build-args: |
            BUN_VERSION=1.2.19
            PROJECT=${{ matrix.project }}
            CONFIG=production
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Backend push
      - name: Push backend image (reuse cache)
        if: matrix.type == 'backend'
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ./docker/backend/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
