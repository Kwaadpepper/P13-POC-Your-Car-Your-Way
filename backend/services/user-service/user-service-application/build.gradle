plugins {
  alias libs.plugins.spring.boot
  id "java"
}

repositories {
  mavenCentral()
}

group = "ycyw.services"
version = "0.0.1-SNAPSHOT"

dependencies {
  implementation project(":user-service-domain")
  implementation project(":user-service-infrastructure")
  implementation project(":shared")

  implementation platform(libs.spring.boot.dependencies)
  implementation platform(libs.spring.cloud.dependencies)

  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.boot:spring-boot-starter-validation"
  implementation "org.springframework.boot:spring-boot-starter-data-jpa"
  runtimeOnly libs.postgresql
  implementation "org.springframework.boot:spring-boot-starter-aop"
  implementation "org.springframework.boot:spring-boot-starter-amqp"
  implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
  implementation "org.springframework.cloud:spring-cloud-starter-config"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation libs.micrometer.registry.prometheus
  testImplementation "org.springframework.boot:spring-boot-starter-test"
  implementation libs.datafaker
}

// dependencies {
//   implementation(platform(libs.spring.boot.dependencies))
//   implementation(platform(libs.spring.cloud.dependencies))

//   implementation("org.springframework.boot:spring-boot-starter-web")
//   implementation("org.springframework.boot:spring-boot-starter-validation")
//   implementation("org.springframework.boot:spring-boot-starter-data-jpa")
//   runtimeOnly(libs.postgresql)
//   implementation("org.springframework.boot:spring-boot-starter-amqp")
//   implementation("org.springframework.cloud:spring-cloud-starter-netflix-eureka-client")
//   implementation("org.springframework.cloud:spring-cloud-starter-config")
//   implementation("org.springframework.boot:spring-boot-starter-actuator")
//   implementation(libs.micrometer.registry.prometheus)
//   testImplementation("org.springframework.boot:spring-boot-starter-test")
// }
